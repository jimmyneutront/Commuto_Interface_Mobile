createOfferTable:
CREATE TABLE Offer (
id TEXT UNIQUE NOT NULL,
isCreated INTEGER NOT NULL,
isTaken INTEGER NOT NULL,
maker TEXT NOT NULL,
interfaceId TEXT NOT NULL,
stablecoin TEXT NOT NULL,
amountLowerBound TEXT NOT NULL,
amountUpperBound TEXT NOT NULL,
securityDepositAmount TEXT NOT NULL,
serviceFeeRate TEXT NOT NULL,
onChainDirection TEXT NOT NULL,
protocolVersion TEXT NOT NULL,
chainID TEXT NOT NULL,
havePublicKey INTEGER NOT NULL,
isUserMaker INTEGER NOT NULL,
state TEXT NOT NULL,
approveToOpenState TEXT NOT NULL,
approveToOpenTransactionHash TEXT,
approveToOpenTransactionCreationTime TEXT,
approveToOpenTransactionCreationBlockNumber INTEGER,
openingOfferState TEXT NOT NULL,
openingOfferTransactionHash TEXT,
openingOfferTransactionCreationTime TEXT,
openingOfferTransactionCreationBlockNumber INTEGER,
cancelingOfferState TEXT NOT NULL,
offerCancellationTransactionHash TEXT,
offerCancellationTransactionCreationTime TEXT,
offerCancellationTransactionCreationBlockNumber INTEGER,
editingOfferState TEXT NOT NULL,
offerEditingTransactionHash TEXT,
offerEditingTransactionCreationTime TEXT,
offerEditingTransactionCreationBlockNumber INTEGER,
approveToTakeState TEXT NOT NULL,
approveToTakeTransactionHash TEXT,
approveToTakeTransactionCreationTime TEXT,
approveToTakeTransactionCreationBlockNumber INTEGER,
takingOfferState TEXT NOT NULL,
takingOfferTransactionHash TEXT,
takingOfferTransactionCreationTime TEXT,
takingOfferTransactionCreationBlockNumber INTEGER
);

createSettlementMethodTable:
CREATE TABLE OfferSettlementMethod (
id TEXT NOT NULL,
chainID TEXT NOT NULL,
settlementMethod TEXT NOT NULL,
privateData TEXT,
privateDataInitializationVector TEXT
);

createPendingOfferSettlementMethodTable:
CREATE TABLE PendingOfferSettlementMethod (
id TEXT NOT NULL,
chainID TEXT NOT NULL,
settlementMethod TEXT NOT NULL,
privateData TEXT,
privateDataInitializationVector TEXT
);

createKeyPairTable:
CREATE TABLE KeyPair (
interfaceId TEXT UNIQUE NOT NULL,
publicKey TEXT NOT NULL,
privateKey TEXT NOT NULL
);

createPublicKeyTable:
CREATE TABLE PublicKey (
interfaceId TEXT UNIQUE NOT NULL,
publicKey TEXT NOT NULL
);

createSwapTable:
CREATE TABLE Swap (
id TEXT UNIQUE NOT NULL,
isCreated INTEGER NOT NULL,
requiresFill INTEGER NOT NULL,
maker TEXT NOT NULL,
makerInterfaceID TEXT NOT NULL,
taker TEXT NOT NULL,
takerInterfaceID TEXT NOT NULL,
stablecoin TEXT NOT NULL,
amountLowerBound TEXT NOT NULL,
amountUpperBound TEXT NOT NULL,
securityDepositAmount TEXT NOT NULL,
takenSwapAmount TEXT NOT NULL,
serviceFeeAmount TEXT NOT NULL,
serviceFeeRate TEXT NOT NULL,
onChainDirection TEXT NOT NULL,
settlementMethod TEXT NOT NULL,
makerPrivateData TEXT,
makerPrivateDataInitializationVector TEXT,
takerPrivateData TEXT,
takerPrivateDataInitializationVector TEXT,
protocolVersion TEXT NOT NULL,
isPaymentSent INTEGER NOT NULL,
isPaymentReceived INTEGER NOT NULL,
hasBuyerClosed INTEGER NOT NULL,
hasSellerClosed INTEGER NOT NULL,
disputeRaiser TEXT NOT NULL,
chainID TEXT NOT NULL,
state TEXT NOT NULL,
role TEXT NOT NULL,
reportPaymentSentState TEXT NOT NULL,
reportPaymentSentTransactionHash TEXT,
reportPaymentSentTransactionCreationTime TEXT,
reportPaymentSentTransactionCreationBlockNumber INTEGER,
reportPaymentReceivedState TEXT NOT NULL,
reportPaymentReceivedTransactionHash TEXT,
reportPaymentReceivedTransactionCreationTime TEXT,
reportPaymentReceivedTransactionCreationBlockNumber INTEGER,
closeSwapState TEXT NOT NULL,
closeSwapTransactionHash TEXT,
closeSwapTransactionCreationTime TEXT,
closeSwapTransactionCreationBlockNumber INTEGER
);

createUserSettlementMethodTable:
CREATE TABLE UserSettlementMethod(
settlementMethodID TEXT UNIQUE NOT NULL,
settlementMethod TEXT NOT NULL,
privateData TEXT,
privateDataInitializationVector TEXT
);

insertOffer:
INSERT INTO Offer(
    id,
    isCreated,
    isTaken,
    maker,
    interfaceId,
    stablecoin,
    amountLowerBound,
    amountUpperBound,
    securityDepositAmount,
    serviceFeeRate,
    onChainDirection,
    protocolVersion,
    chainID,
    havePublicKey,
    isUserMaker,
    state,
    approveToOpenState,
    approveToOpenTransactionHash,
    approveToOpenTransactionCreationTime,
    approveToOpenTransactionCreationBlockNumber,
    openingOfferState,
    openingOfferTransactionHash,
    openingOfferTransactionCreationTime,
    openingOfferTransactionCreationBlockNumber,
    cancelingOfferState,
    offerCancellationTransactionHash,
    offerCancellationTransactionCreationTime,
    offerCancellationTransactionCreationBlockNumber,
    editingOfferState,
    offerEditingTransactionHash,
    offerEditingTransactionCreationTime,
    offerEditingTransactionCreationBlockNumber,
    approveToTakeState,
    approveToTakeTransactionHash,
    approveToTakeTransactionCreationTime,
    approveToTakeTransactionCreationBlockNumber,
    takingOfferState,
    takingOfferTransactionHash,
    takingOfferTransactionCreationTime,
    takingOfferTransactionCreationBlockNumber
)
VALUES(?, ?, ?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?, ?, ?,
?, ?, ?,
?, ?, ?,
?, ?,?,
?, ?,?,
?, ?, ?,
?, ?,
?, ?, ?,
?, ?);

insertOfferSettlementMethod:
INSERT INTO OfferSettlementMethod(
    id,
    chainID,
    settlementMethod,
    privateData,
    privateDataInitializationVector
)
VALUES(?, ?, ?, ?, ?);

insertPendingOfferSettlementMethod:
INSERT INTO PendingOfferSettlementMethod(
    id,
    chainID,
    settlementMethod,
    privateData,
    privateDataInitializationVector
)
VALUES(?, ?, ?, ?, ?);

insertKeyPair:
INSERT INTO KeyPair(interfaceId, publicKey, privateKey)
VALUES(?, ?, ?);

insertPublicKey:
INSERT INTO PublicKey(interfaceId, publicKey)
VALUES(?, ?);

insertSwap:
INSERT INTO Swap(
    id,
    isCreated,
    requiresFill,
    maker,
    makerInterfaceID,
    taker,
    takerInterfaceID,
    stablecoin,
    amountLowerBound,
    amountUpperBound,
    securityDepositAmount,
    takenSwapAmount,
    serviceFeeAmount,
    serviceFeeRate,
    onChainDirection,
    settlementMethod,
    makerPrivateData,
    makerPrivateDataInitializationVector,
    takerPrivateData,
    takerPrivateDataInitializationVector,
    protocolVersion,
    isPaymentSent,
    isPaymentReceived,
    hasBuyerClosed,
    hasSellerClosed,
    disputeRaiser,
    chainID,
    state,
    role,
    reportPaymentSentState,
    reportPaymentSentTransactionHash,
    reportPaymentSentTransactionCreationTime,
    reportPaymentSentTransactionCreationBlockNumber,
    reportPaymentReceivedState,
    reportPaymentReceivedTransactionHash,
    reportPaymentReceivedTransactionCreationTime,
    reportPaymentReceivedTransactionCreationBlockNumber,
    closeSwapState,
    closeSwapTransactionHash,
    closeSwapTransactionCreationTime,
    closeSwapTransactionCreationBlockNumber
)
VALUES(?, ?, ?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?,
?, ?,?, ?, ?, ?,
?, ?, ?, ?,
?, ?,
?, ?,
?, ?,
?, ?, ?,
?);

insertUserSettlementMethod:
INSERT INTO UserSettlementMethod(
    settlementMethodID,
    settlementMethod,
    privateData,
    privateDataInitializationVector
)
VALUES(?, ?, ?, ?);

updateOfferHavePublicKeyByOfferIDAndChainID:
UPDATE Offer
SET havePublicKey = ?
WHERE id = ? AND chainID = ?;

updateOfferStateByOfferIDAndChainID:
UPDATE Offer
SET state = ?
WHERE id = ? AND chainID = ?;

updateOfferApproveToOpenStateByOfferIDAndChainID:
UPDATE Offer
SET approveToOpenState = ?
WHERE id = ? AND chainID = ?;

updateOfferApproveToOpenDataByOfferIDAndChainID:
UPDATE Offer
SET approveToOpenTransactionHash = ?,
approveToOpenTransactionCreationTime = ?,
approveToOpenTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateOpeningOfferStateByOfferIDAndChainID:
UPDATE Offer
SET openingOfferState = ?
WHERE id = ? AND chainID = ?;

updateOpeningOfferDataByOfferIDAndChainID:
UPDATE Offer
SET openingOfferTransactionHash = ?,
openingOfferTransactionCreationTime = ?,
openingOfferTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateCancelingOfferStateByOfferIDAndChainID:
UPDATE Offer
SET cancelingOfferState = ?
WHERE id = ? AND chainID = ?;

updateOfferCancellationDataByOfferIDAndChainID:
UPDATE Offer
SET offerCancellationTransactionHash = ?,
offerCancellationTransactionCreationTime = ?,
offerCancellationTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateEditingOfferStateByOfferIDAndChainID:
UPDATE Offer
SET editingOfferState = ?
WHERE id = ? AND chainID = ?;

updateOfferEditingDataByOfferIDAndChainID:
UPDATE Offer
SET offerEditingTransactionHash = ?,
offerEditingTransactionCreationTime = ?,
offerEditingTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateOfferApproveToTakeStateByOfferIDAndChainID:
UPDATE Offer
SET approveToTakeState = ?
WHERE id = ? AND chainID = ?;

updateOfferApproveToTakeDataByOfferIDAndChainID:
UPDATE Offer
SET approveToTakeTransactionHash = ?,
approveToTakeTransactionCreationTime = ?,
approveToTakeTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateTakingOfferStateByOfferIDAndChainID:
UPDATE Offer
SET takingOfferState = ?
WHERE id = ? AND chainID = ?;

updateTakingOfferDataByOfferIDAndChainID:
UPDATE Offer
SET takingOfferTransactionHash = ?,
takingOfferTransactionCreationTime = ?,
takingOfferTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateSwapRequiresFillBySwapIDAndChainID:
UPDATE Swap
SET requiresFill = ?
WHERE id = ? AND chainID = ?;

updateSwapMakerPrivateSettlementMethodData:
UPDATE Swap
SET makerPrivateData = ?, makerPrivateDataInitializationVector = ?
WHERE id = ? AND chainID = ?;

updateSwapTakerPrivateSettlementMethodData:
UPDATE Swap
SET takerPrivateData = ?, takerPrivateDataInitializationVector = ?
WHERE id = ? AND chainID = ?;

updateSwapIsPaymentSentBySwapIDAndChainID:
UPDATE Swap
SET isPaymentSent = ?
WHERE id = ? AND chainID = ?;

updateSwapIsPaymentReceivedBySwapIDAndChainID:
UPDATE Swap
SET isPaymentReceived = ?
WHERE id = ? AND chainID = ?;

updateSwapHasBuyerClosedBySwapIDAndChainID:
UPDATE Swap
SET hasBuyerClosed = ?
WHERE id = ? AND chainID = ?;

updateSwapHasSellerClosedBySwapIDAndChainID:
UPDATE Swap
SET hasSellerClosed = ?
WHERE id = ? AND chainID = ?;

updateSwapStateBySwapIDAndChainID:
UPDATE Swap
SET state = ?
WHERE id = ? AND chainID = ?;

updateReportPaymentSentStateBySwapIDAndChainID:
UPDATE Swap
SET reportPaymentSentState = ?
WHERE id = ? AND chainID = ?;

updateReportPaymentSentDataBySwapIDAndChainID:
UPDATE Swap
SET reportPaymentSentTransactionHash = ?,
reportPaymentSentTransactionCreationTime = ?,
reportPaymentSentTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateReportPaymentReceivedStateBySwapIDAndChainID:
UPDATE Swap
SET reportPaymentReceivedState = ?
WHERE id = ? AND chainID = ?;

updateReportPaymentReceivedDataBySwapIDAndChainID:
UPDATE Swap
SET reportPaymentReceivedTransactionHash = ?,
reportPaymentReceivedTransactionCreationTime = ?,
reportPaymentReceivedTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateCloseSwapStateBySwapIDAndChainID:
UPDATE Swap
SET closeSwapState = ?
WHERE id = ? AND chainID = ?;

updateCloseSwapDataBySwapIDAndChainID:
UPDATE Swap
SET closeSwapTransactionHash = ?,
closeSwapTransactionCreationTime = ?,
closeSwapTransactionCreationBlockNumber = ?
WHERE id = ? AND chainID = ?;

updateUserSettlementMethodByID:
UPDATE UserSettlementMethod
SET privateData = ?, privateDataInitializationVector = ?
WHERE settlementMethodID = ?;

selectOfferByOfferId:
SELECT * FROM Offer
WHERE id = ?;

selectOfferSettlementMethodByOfferIdAndChainID:
SELECT * FROM OfferSettlementMethod
WHERE id = ? AND chainID = ?;

selectPendingOfferSettlementMethodByOfferIdAndChainID:
SELECT * FROM PendingOfferSettlementMethod
WHERE id = ? AND chainID = ?;

selectKeyPairByInterfaceId:
SELECT * FROM KeyPair
WHERE interfaceId = ?;

selectPublicKeyByInterfaceId:
SELECT * FROM PublicKey
WHERE interfaceId = ?;

selectSwapBySwapID:
SELECT * FROM Swap
WHERE id = ?;

selectUserSettlementMethodByID:
SELECT * FROM UserSettlementMethod
WHERE settlementMethodID = ?;

deleteOfferByOfferIdAndChainID:
DELETE FROM Offer
WHERE id = ? AND chainID = ?;

deleteOfferSettlementMethodByOfferIdAndChainID:
DELETE FROM OfferSettlementMethod
WHERE id = ? AND chainID = ?;

deletePendingOfferSettlementMethodByOfferIdAndChainID:
DELETE FROM PendingOfferSettlementMethod
WHERE id = ? AND chainID = ?;

deleteSwapBySwapIDAndChainID:
DELETE FROM Swap
WHERE id = ? AND chainID = ?;

deleteUserSettlementMethodByID:
DELETE FROM UserSettlementMethod
WHERE settlementMethodID = ?;

removeAllOffers:
DELETE FROM Offer;

removeAllOfferSettlementMethods:
DELETE FROM OfferSettlementMethod;

removeAllPendingOfferSettlementMethods:
DELETE FROM PendingOfferSettlementMethod;

removeAllKeyPairs:
DELETE FROM KeyPair;

removeAllPublicKeys:
DELETE FROM PublicKey;

removeAllSwaps:
DELETE FROM Swap;

removeAllUserSettlementMethods:
DELETE FROM UserSettlementMethod;
createOfferTable:
CREATE TABLE Offer (
offerId TEXT UNIQUE NOT NULL,
isCreated INTEGER NOT NULL,
isTaken INTEGER NOT NULL,
maker TEXT NOT NULL,
interfaceId TEXT NOT NULL,
stablecoin TEXT NOT NULL,
amountLowerBound TEXT NOT NULL,
amountUpperBound TEXT NOT NULL,
securityDepositAmount TEXT NOT NULL,
serviceFeeRate TEXT NOT NULL,
onChainDirection TEXT NOT NULL,
protocolVersion TEXT NOT NULL,
chainID TEXT NOT NULL,
havePublicKey INTEGER NOT NULL,
isUserMaker INTEGER NOT NULL,
state TEXT NOT NULL
);

createSettlementMethodTable:
CREATE TABLE SettlementMethod (
offerId TEXT NOT NULL,
chainID TEXT NOT NULL,
settlementMethod TEXT NOT NULL
);

createKeyPairTable:
CREATE TABLE KeyPair (
interfaceId TEXT UNIQUE NOT NULL,
publicKey TEXT NOT NULL,
privateKey TEXT NOT NULL
);

createPublicKeyTable:
CREATE TABLE PublicKey (
interfaceId TEXT UNIQUE NOT NULL,
publicKey TEXT NOT NULL
);

createSwapTable:
CREATE TABLE Swap (
swapID TEXT UNIQUE NOT NULL,
isCreated INTEGER NOT NULL,
requiresFill INTEGER NOT NULL,
maker TEXT NOT NULL,
makerInterfaceID TEXT NOT NULL,
taker TEXT NOT NULL,
takerInterfaceID TEXT NOT NULL,
stablecoin TEXT NOT NULL,
amountLowerBound TEXT NOT NULL,
amountUpperBound TEXT NOT NULL,
securityDepositAmount TEXT NOT NULL,
takenSwapAmount TEXT NOT NULL,
serviceFeeAmount TEXT NOT NULL,
serviceFeeRate TEXT NOT NULL,
onChainDirection TEXT NOT NULL,
settlementMethod TEXT NOT NULL,
protocolVersion TEXT NOT NULL,
isPaymentSent INTEGER NOT NULL,
isPaymentReceived INTEGER NOT NULL,
hasBuyerClosed INTEGER NOT NULL,
hasSellerClosed INTEGER NOT NULL,
disputeRaiser TEXT NOT NULL,
chainID TEXT NOT NULL,
state TEXT NOT NULL
);

insertOffer:
INSERT INTO Offer(
    offerId,
    isCreated,
    isTaken,
    maker,
    interfaceId,
    stablecoin,
    amountLowerBound,
    amountUpperBound,
    securityDepositAmount,
    serviceFeeRate,
    onChainDirection,
    protocolVersion,
    chainID,
    havePublicKey,
    isUserMaker,
    state
)
VALUES(?, ?, ?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?);

insertSettlementMethod:
INSERT INTO SettlementMethod(offerId, chainID, settlementMethod)
VALUES(?, ?, ?);

insertKeyPair:
INSERT INTO KeyPair(interfaceId, publicKey, privateKey)
VALUES(?, ?, ?);

insertPublicKey:
INSERT INTO PublicKey(interfaceId, publicKey)
VALUES(?, ?);

insertSwap:
INSERT INTO Swap(
    swapID,
    isCreated,
    requiresFill,
    maker,
    makerInterfaceID,
    taker,
    takerInterfaceID,
    stablecoin,
    amountLowerBound,
    amountUpperBound,
    securityDepositAmount,
    takenSwapAmount,
    serviceFeeAmount,
    serviceFeeRate,
    onChainDirection,
    settlementMethod,
    protocolVersion,
    isPaymentSent,
    isPaymentReceived,
    hasBuyerClosed,
    hasSellerClosed,
    disputeRaiser,
    chainID,
    state
)
VALUES(?, ?, ?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?, ?,
?, ?, ?, ?, ?, ?,
?);

updateOfferHavePublicKeyByOfferIDAndChainID:
UPDATE Offer
SET havePublicKey = ?
WHERE offerId = ? AND chainID = ?;

updateOfferStateByOfferIDAndChainID:
UPDATE Offer
SET state = ?
WHERE offerId = ? AND chainID = ?;

updateSwapStateBySwapIDAndChainID:
UPDATE Swap
SET state = ?
WHERE swapID = ? AND chainID = ?;

selectOfferByOfferId:
SELECT * FROM Offer
WHERE offerId = ?;

selectSettlementMethodByOfferIdAndChainID:
SELECT * FROM SettlementMethod
WHERE offerId = ? AND chainID = ?;

selectKeyPairByInterfaceId:
SELECT * FROM KeyPair
WHERE interfaceId = ?;

selectPublicKeyByInterfaceId:
SELECT * FROM PublicKey
WHERE interfaceId = ?;

selectSwapBySwapID:
SELECT * FROM Swap
WHERE swapID = ?;

deleteOfferByOfferIdAndChainID:
DELETE FROM Offer
WHERE offerId = ? AND chainID = ?;

deleteSettlementMethodByOfferIdAndChainID:
DELETE FROM SettlementMethod
WHERE offerId = ? AND chainID = ?;

deleteSwapBySwapIDAndChainID:
DELETE FROM Swap
WHERE swapID = ? AND chainID = ?;

removeAllOffers:
DELETE FROM Offer;

removeAllSettlementMethods:
DELETE FROM SettlementMethod;

removeAllKeyPairs:
DELETE FROM KeyPair;

removeAllPublicKeys:
DELETE FROM PublicKey;

removeAllSwaps:
DELETE FROM Swap;